[{"/Users/apple/Desktop/autodox/src/index.tsx":"1","/Users/apple/Desktop/autodox/src/reportWebVitals.ts":"2","/Users/apple/Desktop/autodox/src/App.tsx":"3","/Users/apple/Desktop/autodox/src/api/api.tsx":"4","/Users/apple/Desktop/autodox/src/components/create.tsx":"5"},{"size":500,"mtime":1608268515000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1608268515000,"results":"8","hashOfConfig":"7"},{"size":3406,"mtime":1609698126000,"results":"9","hashOfConfig":"7"},{"size":1377,"mtime":1609696810000,"results":"10","hashOfConfig":"7"},{"size":943,"mtime":1609697474000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"qth11k",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/apple/Desktop/autodox/src/index.tsx",[],["26","27"],"/Users/apple/Desktop/autodox/src/reportWebVitals.ts",[],"/Users/apple/Desktop/autodox/src/App.tsx",["28"],"import React from \"react\";\nimport \"./App.css\";\nimport Create from \"./components/create\";\nimport lookup from \"./api/api\";\nimport { brotliCompress } from \"zlib\";\n// auth credineitals not provided\n//one posisble solotion it to make ajax inside the localhost:8000\nfunction App() {\n  // ðŸ”´I can't set cookies\n  // i may need to anable cookies by the browser first.\n  // const [cookies, setCookie] = useCookies([\"name\"]);\n  const element = document.getElementById(\"root\")!;\n  // React.useEffect(() => {\n  //   setCookie(\"name\", JSON.stringify({ name: \"other name\" }), { path: \"/\" });\n  // }, []);\n  // const val = JSON.stringify(cookies.name);\n  // console.log(JSON.parse(val));\n\n  // var getCookies = function () {\n  //   var pairs = document.cookie.split(\";\");\n  //   var cookies: any = {};\n  //   for (var i = 0; i < pairs.length; i++) {\n  //     var pair = pairs[i].split(\"=\");\n  //     cookies[(pair[0] + \"\").trim()] = unescape(pair.slice(1).join(\"=\"));\n  //   }\n  //   console.log(cookies);\n  //   return cookies;\n  // };\n\n  // var myCookies = getCookies();\n  const [state, setstate] = React.useState([]);\n  const callback = (response: any, status: number) => {\n    setstate(\n      response !== null && response.books !== null ? response.books : []\n    );\n    console.log(response, status);\n  };\n  React.useEffect(() => {\n    lookup(\"GET\", \"api/\", callback);\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>{element.dataset.username}</h1>\n      <Create />\n      {element.dataset.username !== \"AnonymousUser\" && (\n        <form\n          className=\"logout\"\n          method=\"post\"\n          action={element.dataset.logouturl}\n        >\n          <input\n            hidden\n            name=\"csrfmiddlewaretoken\"\n            value={element.dataset.crf}\n          />\n          <button type=\"submit\">logout</button>\n        </form>\n      )}\n\n      {element.dataset.username === \"AnonymousUser\" && (\n        <form className=\"login\" method=\"POST\" action={element.dataset.loginurl}>\n          <input\n            hidden\n            name=\"csrfmiddlewaretoken\"\n            value={element.dataset.crf}\n          />\n          <input\n            type=\"text\"\n            name=\"login\"\n            placeholder=\"Username\"\n            autoComplete=\"username\"\n            maxLength={150}\n            required={true}\n            id=\"id_login\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"current-password\"\n            required={true}\n            id=\"id_password\"\n          />\n          <input type=\"checkbox\" name=\"remember\" id=\"id_remember\" />\n          <button className=\"primaryAction\" type=\"submit\">\n            Sign In\n          </button>\n        </form>\n      )}\n      {element.dataset.username === \"AnonymousUser\" && (\n        <p className=\"socialaccount_providers\">\n          login/singup with google\n          <a\n            title=\"Google\"\n            className=\"socialaccount_provider google\"\n            href=\"/accounts/google/login/?process=login\"\n          >\n            Google\n          </a>\n        </p>\n      )}\n      <header className=\"App-header\">\n        {state.map((item: any) => (\n          <div style={{ border: \"1px solid black\" }}>\n            <h1>{item.title}</h1>\n            <h1>{item.description}</h1>\n          </div>\n        ))}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/apple/Desktop/autodox/src/api/api.tsx",["29","30"],"const getCookie = (name: string) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n};\nexport default function lookup(\n  method: string,\n  endpoint: string,\n  callback: Function,\n  data: any\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"json\";\n  xhr.open(method, `${window.location.origin}/${endpoint}`);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\n    \"Authorization\",\n    \"Basic \" + btoa(\"Ali\" + \":\" + \"AAssppmm11\")\n  );\n  const coockie = getCookie(\"csrftoken\");\n  if (coockie) {\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-Requested-with\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-CSRFToken\", coockie);\n  }\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"The request was an error\" }, 400);\n  };\n  xhr.send(JSON.stringify(data));\n}\n",["31","32"],"/Users/apple/Desktop/autodox/src/components/create.tsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":5,"column":10,"nodeType":"39","messageId":"40","endLine":5,"endColumn":24},{"ruleId":"41","severity":1,"message":"42","line":28,"column":27,"nodeType":"43","messageId":"44","endLine":28,"endColumn":28},{"ruleId":"41","severity":1,"message":"42","line":28,"column":33,"nodeType":"43","messageId":"44","endLine":28,"endColumn":34},{"ruleId":"33","replacedBy":"45"},{"ruleId":"35","replacedBy":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"@typescript-eslint/no-unused-vars","'brotliCompress' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["47"],["48"],"no-global-assign","no-unsafe-negation"]