[{"/Users/apple/Desktop/autodox/src/index.tsx":"1","/Users/apple/Desktop/autodox/src/reportWebVitals.ts":"2","/Users/apple/Desktop/autodox/src/App.tsx":"3","/Users/apple/Desktop/autodox/src/api/api.tsx":"4","/Users/apple/Desktop/autodox/src/components/create.tsx":"5","/Users/apple/Desktop/autodox/src/components/Header.tsx":"6","/Users/apple/Desktop/autodox/src/components/Form.tsx":"7","/Users/apple/Desktop/autodox/src/components/LoginForm.tsx":"8","/Users/apple/Desktop/autodox/src/components/Paper.tsx":"9","/Users/apple/Desktop/autodox/src/slate/Main.tsx":"10","/Users/apple/Desktop/autodox/src/slate/CodeElement.tsx":"11","/Users/apple/Desktop/autodox/src/slate/DefaultElement.tsx":"12","/Users/apple/Desktop/autodox/src/slate/CustomEditor.tsx":"13","/Users/apple/Desktop/autodox/src/slate/Bold.tsx":"14","/Users/apple/Desktop/autodox/src/slate/components.tsx":"15","/Users/apple/Desktop/autodox/src/slate/HoveringToolbar.tsx":"16","/Users/apple/Desktop/autodox/src/slate/RichTextExample.tsx":"17","/Users/apple/Desktop/autodox/src/slate/HoverToolbar.tsx":"18"},{"size":500,"mtime":1608268515000,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1608268515000,"results":"21","hashOfConfig":"20"},{"size":1713,"mtime":1611750111000,"results":"22","hashOfConfig":"20"},{"size":1377,"mtime":1609749084000,"results":"23","hashOfConfig":"20"},{"size":1299,"mtime":1611391960000,"results":"24","hashOfConfig":"20"},{"size":413,"mtime":1609750439000,"results":"25","hashOfConfig":"20"},{"size":311,"mtime":1609750397000,"results":"26","hashOfConfig":"20"},{"size":1069,"mtime":1609750495000,"results":"27","hashOfConfig":"20"},{"size":762,"mtime":1611395724000,"results":"28","hashOfConfig":"20"},{"size":4816,"mtime":1611749621000,"results":"29","hashOfConfig":"20"},{"size":391,"mtime":1611748864000,"results":"30","hashOfConfig":"20"},{"size":493,"mtime":1611741113000,"results":"31","hashOfConfig":"20"},{"size":984,"mtime":1611748886000,"results":"32","hashOfConfig":"20"},{"size":231,"mtime":1611748864000,"results":"33","hashOfConfig":"20"},{"size":3573,"mtime":1611744695000,"results":"34","hashOfConfig":"20"},{"size":2729,"mtime":1611760527000,"results":"35","hashOfConfig":"20"},{"size":6122,"mtime":1611760804000,"results":"36","hashOfConfig":"20"},{"size":1533,"mtime":1611761396000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"qth11k",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/apple/Desktop/autodox/src/index.tsx",[],["78","79"],"/Users/apple/Desktop/autodox/src/reportWebVitals.ts",[],"/Users/apple/Desktop/autodox/src/App.tsx",[],"/Users/apple/Desktop/autodox/src/api/api.tsx",["80","81"],"const getCookie = (name: string) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n};\nexport default function lookup(\n  method: string,\n  endpoint: string,\n  callback: Function,\n  data?: any\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"json\";\n  xhr.open(method, `${window.location.origin}/${endpoint}`);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\n    \"Authorization\",\n    \"Basic \" + btoa(\"Ali\" + \":\" + \"AAssppmm11\")\n  );\n  const coockie = getCookie(\"csrftoken\");\n  if (coockie) {\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-Requested-with\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-CSRFToken\", coockie);\n  }\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"The request was an error\" }, 400);\n  };\n  xhr.send(JSON.stringify(data));\n}\n","/Users/apple/Desktop/autodox/src/components/create.tsx",[],"/Users/apple/Desktop/autodox/src/components/Header.tsx",[],"/Users/apple/Desktop/autodox/src/components/Form.tsx",[],"/Users/apple/Desktop/autodox/src/components/LoginForm.tsx",[],"/Users/apple/Desktop/autodox/src/components/Paper.tsx",[],"/Users/apple/Desktop/autodox/src/slate/Main.tsx",[],"/Users/apple/Desktop/autodox/src/slate/CodeElement.tsx",[],"/Users/apple/Desktop/autodox/src/slate/DefaultElement.tsx",[],"/Users/apple/Desktop/autodox/src/slate/CustomEditor.tsx",[],"/Users/apple/Desktop/autodox/src/slate/Bold.tsx",[],"/Users/apple/Desktop/autodox/src/slate/components.tsx",[],"/Users/apple/Desktop/autodox/src/slate/HoveringToolbar.tsx",["82","83"],"import React, { useRef, useEffect } from \"react\";\nimport { ReactEditor, useSlate } from \"slate-react\";\nimport { Editor, Transforms, Text, createEditor, Node } from \"slate\";\nimport { css } from \"@emotion/css\";\nimport { Menu, Portal } from \"./components\";\nimport { Range } from \"slate\";\nimport { Button, Icon } from \"./components\";\nimport CustomEditor from \"./CustomEditor\";\n\nconst HoveringToolbar = () => {\n  const ref = useRef<HTMLDivElement | null>();\n  const editor = useSlate();\n\n  useEffect(() => {\n    const el = ref.current;\n    const { selection } = editor;\n\n    if (!el) {\n      return;\n    }\n\n    if (\n      !selection ||\n      !ReactEditor.isFocused(editor) ||\n      Range.isCollapsed(selection) ||\n      Editor.string(editor, selection) === \"\"\n    ) {\n      el.removeAttribute(\"style\");\n      return;\n    }\n\n    const domSelection = window.getSelection()!;\n    const domRange = domSelection.getRangeAt(0);\n    const rect = domRange.getBoundingClientRect();\n    el.style.opacity = \"1\";\n    el.style.top = `${rect.top + window.pageYOffset - el.offsetHeight}px`;\n    el.style.left = `${\n      rect.left + window.pageXOffset - el.offsetWidth / 2 + rect.width / 2\n    }px`;\n  });\n\n  return (\n    <Portal>\n      <Menu\n        ref={ref}\n        className={css`\n          padding: 8px 7px 6px;\n          position: absolute;\n          z-index: 1;\n          top: -10000px;\n          left: -10000px;\n          margin-top: -6px;\n          opacity: 0;\n          background-color: #222;\n          border-radius: 4px;\n          transition: opacity 0.75s;\n        `}\n      >\n        <FormatButton format=\"bold\" icon=\"B\" />\n        <FormatButton format=\"italic\" icon=\"i\" />\n        <FormatButton format=\"underlined\" icon=\"__\" />\n        <FormatButton format=\"code\" icon=\"<>\" />\n      </Menu>\n    </Portal>\n  );\n};\n\nconst isFormatActive = (editor: any, format: any) => {\n  const [match]: any = Editor.nodes(editor, {\n    match: (n) => n[format] === true,\n    mode: \"all\",\n  });\n  return !!match;\n};\n\nconst toggleFormat = (editor: any, format: any) => {\n  switch (format) {\n    case \"code\":\n      CustomEditor.toggleCodeBlock(editor);\n      break;\n    default:\n      const isActive = isFormatActive(editor, format);\n      Transforms.setNodes(\n        editor,\n        { [format]: isActive ? null : true },\n        { match: Text.isText, split: true }\n      );\n  }\n};\nconst FormatButton = ({ format, icon }: any) => {\n  const editor = useSlate();\n  return (\n    <Button\n      reversed\n      active={isFormatActive(editor, format)}\n      onMouseDown={(event: MouseEvent) => {\n        event.preventDefault();\n        toggleFormat(editor, format);\n      }}\n    >\n      <Icon>{icon}</Icon>\n    </Button>\n  );\n};\nexport default HoveringToolbar;\n","/Users/apple/Desktop/autodox/src/slate/RichTextExample.tsx",["84"],"import React, { useCallback, useMemo, useState } from \"react\";\nimport isHotkey from \"is-hotkey\";\nimport { Editable, withReact, useSlate, Slate } from \"slate-react\";\nimport {\n  Editor,\n  Transforms,\n  createEditor,\n  Node,\n  Element as SlateElement,\n} from \"slate\";\nimport { withHistory } from \"slate-history\";\n\nimport { Button, Icon, Toolbar } from \"./components\";\nimport HoverToolbar from \"./HoverToolbar\";\n\nconst HOTKEYS: any = {\n  \"mod+b\": \"bold\",\n  \"mod+i\": \"italic\",\n  \"mod+u\": \"underline\",\n  \"mod+`\": \"code\",\n};\n\nconst LIST_TYPES: any = [\"numbered-list\", \"bulleted-list\"];\n\nconst RichTextExample = () => {\n  const [value, setValue] = useState<Node[]>(\n    JSON.parse(localStorage.getItem(\"content2\")!)\n  );\n  const renderElement = useCallback((props) => <Element {...props} />, []);\n  const renderLeaf = useCallback((props) => <Leaf {...props} />, []);\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={(value) => {\n        setValue(value);\n        const content2 = JSON.stringify(value);\n        localStorage.setItem(\"content2\", content2);\n      }}\n    >\n      <HoverToolbar />\n      <Toolbar>\n        <MarkButton format=\"bold\" icon=\"format_bold\" />\n        <MarkButton format=\"italic\" icon=\"format_italic\" />\n        <MarkButton format=\"underline\" icon=\"format_underlined\" />\n        <MarkButton format=\"code\" icon=\"code\" />\n        <BlockButton format=\"heading-one\" icon=\"looks_one\" />\n        <BlockButton format=\"heading-two\" icon=\"looks_two\" />\n        <BlockButton format=\"block-quote\" icon=\"format_quote\" />\n        <BlockButton format=\"numbered-list\" icon=\"format_list_numbered\" />\n        <BlockButton format=\"bulleted-list\" icon=\"format_list_bulleted\" />\n      </Toolbar>\n      <Editable\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        placeholder=\"Enter some rich text…\"\n        spellCheck\n        autoFocus\n        onKeyDown={(event) => {\n          for (const hotkey in HOTKEYS) {\n            if (isHotkey(hotkey, event as any)) {\n              event.preventDefault();\n              const mark = HOTKEYS[hotkey];\n              toggleMark(editor, mark);\n            }\n          }\n        }}\n      />\n    </Slate>\n  );\n};\n\nconst toggleBlock = (editor: any, format: any) => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format);\n\n  Transforms.unwrapNodes(editor, {\n    match: (n) =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\n      ),\n    split: true,\n  });\n  const newProperties: Partial<SlateElement> = {\n    type: isActive ? \"paragraph\" : isList ? \"list-item\" : format,\n  };\n  Transforms.setNodes(editor, newProperties);\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nconst toggleMark = (editor: any, format: any) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nconst isBlockActive = (editor: any, format: any) => {\n  const [match]: any = Editor.nodes(editor, {\n    match: (n) =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\n  });\n\n  return !!match;\n};\n\nconst isMarkActive = (editor: any, format: any) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nconst Element = ({ attributes, children, element }: any) => {\n  switch (element.type) {\n    case \"block-quote\":\n      return <blockquote {...attributes}>{children}</blockquote>;\n    case \"bulleted-list\":\n      return <ul {...attributes}>{children}</ul>;\n    case \"heading-one\":\n      return <h1 {...attributes}>{children}</h1>;\n    case \"heading-two\":\n      return <h2 {...attributes}>{children}</h2>;\n    case \"list-item\":\n      return <li {...attributes}>{children}</li>;\n    case \"numbered-list\":\n      return <ol {...attributes}>{children}</ol>;\n    default:\n      return <p {...attributes}>{children}</p>;\n  }\n};\n\nconst Leaf = ({ attributes, children, leaf }: any) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>;\n  }\n\n  if (leaf.code) {\n    children = (\n      <code\n        style={{\n          background: \"lightgray\",\n          borderRadius: \"5px\",\n          color: \"tomato\",\n        }}\n      >\n        {children}\n      </code>\n    );\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>;\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>;\n  }\n\n  return <span {...attributes}>{children}</span>;\n};\n\nconst BlockButton = ({ format, icon }: any) => {\n  const editor = useSlate();\n  return (\n    <Button\n      active={isBlockActive(editor, format)}\n      onMouseDown={(event: MouseEvent) => {\n        event.preventDefault();\n        toggleBlock(editor, format);\n      }}\n    >\n      <Icon>{icon}</Icon>\n    </Button>\n  );\n};\n\nconst MarkButton = ({ format, icon }: any) => {\n  const editor = useSlate();\n  return (\n    <Button\n      active={isMarkActive(editor, format)}\n      onMouseDown={(event: MouseEvent) => {\n        event.preventDefault();\n        toggleMark(editor, format);\n      }}\n    >\n      <Icon>{icon}</Icon>\n    </Button>\n  );\n};\n\nconst initialValue = [\n  {\n    type: \"paragraph\",\n    children: [\n      { text: \"This is editable \" },\n      { text: \"rich\", bold: true },\n      { text: \" text, \" },\n      { text: \"much\", italic: true },\n      { text: \" better than a \" },\n      { text: \"<textarea>\", code: true },\n      { text: \"!\" },\n    ],\n  },\n  {\n    type: \"paragraph\",\n    children: [\n      {\n        text:\n          \"Since it's rich text, you can do things like turn a selection of text \",\n      },\n      { text: \"bold\", bold: true },\n      {\n        text:\n          \", or add a semantically rendered block quote in the middle of the page, like this:\",\n      },\n    ],\n  },\n  {\n    type: \"block-quote\",\n    children: [{ text: \"A wise quote.\" }],\n  },\n  {\n    type: \"paragraph\",\n    children: [{ text: \"Try it out for yourself!\" }],\n  },\n];\n\nexport default RichTextExample;\n","/Users/apple/Desktop/autodox/src/slate/HoverToolbar.tsx",["85","86","87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":28,"column":27,"nodeType":"95","messageId":"96","endLine":28,"endColumn":28},{"ruleId":"93","severity":1,"message":"94","line":28,"column":33,"nodeType":"95","messageId":"96","endLine":28,"endColumn":34},{"ruleId":"97","severity":1,"message":"98","line":3,"column":36,"nodeType":"99","messageId":"100","endLine":3,"endColumn":48},{"ruleId":"97","severity":1,"message":"101","line":3,"column":50,"nodeType":"99","messageId":"100","endLine":3,"endColumn":54},{"ruleId":"97","severity":1,"message":"102","line":200,"column":7,"nodeType":"99","messageId":"100","endLine":200,"endColumn":19},{"ruleId":"97","severity":1,"message":"103","line":5,"column":18,"nodeType":"99","messageId":"100","endLine":5,"endColumn":28},{"ruleId":"97","severity":1,"message":"104","line":5,"column":30,"nodeType":"99","messageId":"100","endLine":5,"endColumn":34},{"ruleId":"97","severity":1,"message":"98","line":5,"column":36,"nodeType":"99","messageId":"100","endLine":5,"endColumn":48},{"ruleId":"97","severity":1,"message":"101","line":5,"column":50,"nodeType":"99","messageId":"100","endLine":5,"endColumn":54},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","@typescript-eslint/no-unused-vars","'createEditor' is defined but never used.","Identifier","unusedVar","'Node' is defined but never used.","'initialValue' is assigned a value but never used.","'Transforms' is defined but never used.","'Text' is defined but never used.","no-global-assign","no-unsafe-negation"]