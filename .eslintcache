[{"/Users/apple/Desktop/autodox/src/index.tsx":"1","/Users/apple/Desktop/autodox/src/reportWebVitals.ts":"2","/Users/apple/Desktop/autodox/src/App.tsx":"3","/Users/apple/Desktop/autodox/src/api/api.tsx":"4","/Users/apple/Desktop/autodox/src/components/create.tsx":"5","/Users/apple/Desktop/autodox/src/components/Header.tsx":"6","/Users/apple/Desktop/autodox/src/components/Form.tsx":"7","/Users/apple/Desktop/autodox/src/components/LoginForm.tsx":"8","/Users/apple/Desktop/autodox/src/components/Paper.tsx":"9","/Users/apple/Desktop/autodox/src/slate/Main.tsx":"10","/Users/apple/Desktop/autodox/src/slate/CodeElement.tsx":"11","/Users/apple/Desktop/autodox/src/slate/DefaultElement.tsx":"12"},{"size":500,"mtime":1608268515000,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608268515000,"results":"15","hashOfConfig":"14"},{"size":1577,"mtime":1611313760000,"results":"16","hashOfConfig":"14"},{"size":1377,"mtime":1609749084000,"results":"17","hashOfConfig":"14"},{"size":1208,"mtime":1609772929000,"results":"18","hashOfConfig":"14"},{"size":413,"mtime":1609750439000,"results":"19","hashOfConfig":"14"},{"size":311,"mtime":1609750397000,"results":"20","hashOfConfig":"14"},{"size":1069,"mtime":1609750495000,"results":"21","hashOfConfig":"14"},{"size":733,"mtime":1611310264000,"results":"22","hashOfConfig":"14"},{"size":1636,"mtime":1611320662000,"results":"23","hashOfConfig":"14"},{"size":191,"mtime":1611319700000,"results":"24","hashOfConfig":"14"},{"size":158,"mtime":1611319746000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"qth11k",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/Desktop/autodox/src/index.tsx",[],["53","54"],"/Users/apple/Desktop/autodox/src/reportWebVitals.ts",[],"/Users/apple/Desktop/autodox/src/App.tsx",[],"/Users/apple/Desktop/autodox/src/api/api.tsx",["55","56"],"const getCookie = (name: string) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n};\nexport default function lookup(\n  method: string,\n  endpoint: string,\n  callback: Function,\n  data?: any\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"json\";\n  xhr.open(method, `${window.location.origin}/${endpoint}`);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\n    \"Authorization\",\n    \"Basic \" + btoa(\"Ali\" + \":\" + \"AAssppmm11\")\n  );\n  const coockie = getCookie(\"csrftoken\");\n  if (coockie) {\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-Requested-with\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-CSRFToken\", coockie);\n  }\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"The request was an error\" }, 400);\n  };\n  xhr.send(JSON.stringify(data));\n}\n","/Users/apple/Desktop/autodox/src/components/create.tsx",[],"/Users/apple/Desktop/autodox/src/components/Header.tsx",[],"/Users/apple/Desktop/autodox/src/components/Form.tsx",[],"/Users/apple/Desktop/autodox/src/components/LoginForm.tsx",[],"/Users/apple/Desktop/autodox/src/components/Paper.tsx",[],"/Users/apple/Desktop/autodox/src/slate/Main.tsx",["57"],"import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Editor, createEditor, Transforms } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport CodeElement from \"./CodeElement\";\nimport DefaultElement from \"./DefaultElement\";\nfunction Main() {\n  const renderElement = useCallback((props: any) => {\n    switch (props.element.type) {\n      case \"code\":\n        return <CodeElement {...props} />;\n      default:\n        return <DefaultElement {...props} />;\n    }\n  }, []);\n\n  const editor = useMemo(() => withReact(createEditor()), []);\n  // Add the initial value when setting up our state.\n  const [value, setValue] = useState([\n    {\n      type: \"paragraph\",\n      children: [{ text: \"A line of text in a paragraph.\" }],\n    },\n  ]);\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={(newValue: any) => setValue(newValue)}\n    >\n      <Editable\n        renderElement={renderElement}\n        onKeyDown={(event: any) => {\n          if (event.key === \"`\" && event.ctrlKey) {\n            event.preventDefault();\n            // Determine whether any of the currently selected blocks are code blocks.\n            const [match]: any = Editor.nodes(editor, {\n              match: (n) => n.type === \"code\",\n            });\n            // Toggle the block type depending on whether there's already a match.\n            Transforms.setNodes(\n              editor,\n              { type: match ? \"paragraph\" : \"code\" },\n              { match: (n) => Editor.isBlock(editor, n) }\n            );\n          }\n        }}\n      />\n    </Slate>\n  );\n}\n\nexport default Main;\n","/Users/apple/Desktop/autodox/src/slate/CodeElement.tsx",[],"/Users/apple/Desktop/autodox/src/slate/DefaultElement.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":28,"column":27,"nodeType":"64","messageId":"65","endLine":28,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":28,"column":33,"nodeType":"64","messageId":"65","endLine":28,"endColumn":34},{"ruleId":"66","severity":1,"message":"67","line":1,"column":30,"nodeType":"68","messageId":"69","endLine":1,"endColumn":39},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]