{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","element","document","getElementById","className","dataset","username","method","action","logouturl","hidden","name","value","crf","type","loginurl","placeholder","autoComplete","maxLength","required","id","title","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qLAgGeA,MA5Ff,WAIE,IAAMC,EAAUC,SAASC,eAAe,QAmBxC,OACE,sBAAKC,UAAU,MAAf,UACE,6BAAKH,EAAQI,QAAQC,WACS,kBAA7BL,EAAQI,QAAQC,UACf,uBACEF,UAAU,SACVG,OAAO,OACPC,OAAQP,EAAQI,QAAQI,UAH1B,UAKE,uBACEC,QAAM,EACNC,KAAK,sBACLC,MAAOX,EAAQI,QAAQQ,MAEzB,wBAAQC,KAAK,SAAb,kCAI0B,kBAA7Bb,EAAQI,QAAQC,UACf,uBAAMF,UAAU,QAAQG,OAAO,OAAOC,OAAQP,EAAQI,QAAQU,SAA9D,UACE,uBACEL,QAAM,EACNC,KAAK,sBACLC,MAAOX,EAAQI,QAAQQ,MAEzB,uBACEC,KAAK,OACLH,KAAK,QACLK,YAAY,WACZC,aAAa,WACbC,UAAW,IACXC,UAAU,EACVC,GAAG,aAEL,uBACEN,KAAK,WACLH,KAAK,WACLK,YAAY,WACZC,aAAa,mBACbE,UAAU,EACVC,GAAG,gBAEL,uBAAON,KAAK,WAAWH,KAAK,WAAWS,GAAG,gBAC1C,wBAAQhB,UAAU,gBAAgBU,KAAK,SAAvC,wBAK0B,kBAA7Bb,EAAQI,QAAQC,UACf,oBAAIF,UAAU,0BAAd,SACE,0DAEE,mBACEiB,MAAM,SACNjB,UAAU,gCACVkB,KAAK,wCAHP,yBAUN,wBAAQlB,UAAU,aAAlB,SACE,+EC5EOmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASC,eAAe,SAM1BoB,K","file":"static/js/main.446da6e3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { useCookies } from \"react-cookie\";\n\nfunction App() {\n  // ðŸ”´I can't set cookies\n  // i may need to anable cookies by the browser first.\n  // const [cookies, setCookie] = useCookies([\"name\"]);\n  const element = document.getElementById(\"root\")!;\n  // React.useEffect(() => {\n  //   setCookie(\"name\", JSON.stringify({ name: \"other name\" }), { path: \"/\" });\n  // }, []);\n  // const val = JSON.stringify(cookies.name);\n  // console.log(JSON.parse(val));\n\n  // var getCookies = function () {\n  //   var pairs = document.cookie.split(\";\");\n  //   var cookies: any = {};\n  //   for (var i = 0; i < pairs.length; i++) {\n  //     var pair = pairs[i].split(\"=\");\n  //     cookies[(pair[0] + \"\").trim()] = unescape(pair.slice(1).join(\"=\"));\n  //   }\n  //   console.log(cookies);\n  //   return cookies;\n  // };\n\n  // var myCookies = getCookies();\n  return (\n    <div className=\"App\">\n      <h1>{element.dataset.username}</h1>\n      {element.dataset.username !== \"AnonymousUser\" && (\n        <form\n          className=\"logout\"\n          method=\"post\"\n          action={element.dataset.logouturl}\n        >\n          <input\n            hidden\n            name=\"csrfmiddlewaretoken\"\n            value={element.dataset.crf}\n          />\n          <button type=\"submit\">from react logout</button>\n        </form>\n      )}\n\n      {element.dataset.username === \"AnonymousUser\" && (\n        <form className=\"login\" method=\"POST\" action={element.dataset.loginurl}>\n          <input\n            hidden\n            name=\"csrfmiddlewaretoken\"\n            value={element.dataset.crf}\n          />\n          <input\n            type=\"text\"\n            name=\"login\"\n            placeholder=\"Username\"\n            autoComplete=\"username\"\n            maxLength={150}\n            required={true}\n            id=\"id_login\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"current-password\"\n            required={true}\n            id=\"id_password\"\n          />\n          <input type=\"checkbox\" name=\"remember\" id=\"id_remember\" />\n          <button className=\"primaryAction\" type=\"submit\">\n            Sign In\n          </button>\n        </form>\n      )}\n      {element.dataset.username === \"AnonymousUser\" && (\n        <ul className=\"socialaccount_providers\">\n          <li>\n            login/singup with google\n            <a\n              title=\"Google\"\n              className=\"socialaccount_provider google\"\n              href=\"/accounts/google/login/?process=login\"\n            >\n              Google\n            </a>\n          </li>\n        </ul>\n      )}\n      <header className=\"App-header\">\n        <h1>ajax authenticated name should be here.</h1>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}