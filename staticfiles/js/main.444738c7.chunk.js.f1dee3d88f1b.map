{"version":3,"sources":["api/api.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["lookup","method","endpoint","callback","data","xhr","XMLHttpRequest","responseType","open","window","location","origin","setRequestHeader","btoa","coockie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","onload","response","status","onerror","e","console","log","message","send","JSON","stringify","App","element","getElementById","React","useState","title","description","state","setstate","className","onChange","pre","target","value","placeholder","onClick","dataset","username","action","logouturl","hidden","crf","type","loginurl","autoComplete","maxLength","required","id","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.444738c7.chunk.js","sourcesContent":["const getCookie = (name: string) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n};\nexport default function lookup(\n  method: string,\n  endpoint: string,\n  callback: Function,\n  data: any\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"json\";\n  xhr.open(method, `${window.location.origin}/${endpoint}`);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\n    \"Authorization\",\n    \"Basic \" + btoa(\"Ali\" + \":\" + \"AAssppmm11\")\n  );\n  const coockie = getCookie(\"csrftoken\");\n  if (coockie) {\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-Requested-with\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-CSRFToken\", coockie);\n  }\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"The request was an error\" }, 400);\n  };\n  xhr.send(JSON.stringify(data));\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport lookup from \"./api/api\";\n// auth credineitals not provided\n//one posisble solotion it to make ajax inside the localhost:8000\n\nfunction App() {\n  // ðŸ”´I can't set cookies\n  // i may need to anable cookies by the browser first.\n  // const [cookies, setCookie] = useCookies([\"name\"]);\n  const element = document.getElementById(\"root\")!;\n  // React.useEffect(() => {\n  //   setCookie(\"name\", JSON.stringify({ name: \"other name\" }), { path: \"/\" });\n  // }, []);\n  // const val = JSON.stringify(cookies.name);\n  // console.log(JSON.parse(val));\n\n  // var getCookies = function () {\n  //   var pairs = document.cookie.split(\";\");\n  //   var cookies: any = {};\n  //   for (var i = 0; i < pairs.length; i++) {\n  //     var pair = pairs[i].split(\"=\");\n  //     cookies[(pair[0] + \"\").trim()] = unescape(pair.slice(1).join(\"=\"));\n  //   }\n  //   console.log(cookies);\n  //   return cookies;\n  // };\n\n  // var myCookies = getCookies();\n  const [state, setstate] = React.useState<any>({ title: \"\", description: \"\" });\n  const callback = (response: any, status: number) => {\n    console.log(response, status);\n  };\n  return (\n    <div className=\"App\">\n      <input\n        onChange={(e) =>\n          setstate((pre: any) => {\n            return { ...pre, title: e.target.value };\n          })\n        }\n        placeholder=\"title\"\n      />\n      <input\n        onChange={(e) =>\n          setstate((pre: any) => {\n            return { ...pre, description: e.target.value };\n          })\n        }\n        placeholder=\"description\"\n      />\n      <button\n        onClick={() => {\n          console.log(state);\n          lookup(\"POST\", \"api/addbook/\", callback, state);\n        }}\n      >\n        create book\n      </button>\n      <h1>{element.dataset.username}</h1>\n      {element.dataset.username !== \"AnonymousUser\" && (\n        <form\n          className=\"logout\"\n          method=\"post\"\n          action={element.dataset.logouturl}\n        >\n          <input\n            hidden\n            name=\"csrfmiddlewaretoken\"\n            value={element.dataset.crf}\n          />\n          <button type=\"submit\">logout</button>\n        </form>\n      )}\n\n      {element.dataset.username === \"AnonymousUser\" && (\n        <form className=\"login\" method=\"POST\" action={element.dataset.loginurl}>\n          <input\n            hidden\n            name=\"csrfmiddlewaretoken\"\n            value={element.dataset.crf}\n          />\n          <input\n            type=\"text\"\n            name=\"login\"\n            placeholder=\"Username\"\n            autoComplete=\"username\"\n            maxLength={150}\n            required={true}\n            id=\"id_login\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"current-password\"\n            required={true}\n            id=\"id_password\"\n          />\n          <input type=\"checkbox\" name=\"remember\" id=\"id_remember\" />\n          <button className=\"primaryAction\" type=\"submit\">\n            Sign In\n          </button>\n        </form>\n      )}\n      {element.dataset.username === \"AnonymousUser\" && (\n        <p className=\"socialaccount_providers\">\n          login/singup with google\n          <a\n            title=\"Google\"\n            className=\"socialaccount_provider google\"\n            href=\"/accounts/google/login/?process=login\"\n          >\n            Google\n          </a>\n        </p>\n      )}\n      <header className=\"App-header\"></header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}